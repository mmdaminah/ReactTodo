{"version":3,"sources":["components/selectInput/SelectInput.tsx","components/date-input/DateInput.tsx","components/task-input/TaskInput.tsx","components/modal/modal.tsx","components/sidebar/sidebar.tsx","components/navbar/Navbar.tsx","components/modalforedit/editModal.tsx","components/showModal/showModal.tsx","components/table/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelectInput","title","items","setFilter","width","variant","className","InputLabel","id","Select","name","labelId","label","onChange","event","target","value","map","item","MenuItem","MaterialUIPickers","setSelectedDate","selectedDate","utils","DateFnsUtils","Grid","container","justify","margin","format","date","KeyboardButtonProps","TaskInput","setTaskNameInput","setPriority","setStatus","setTaskDetails","TaskDetails","noValidate","autoComplete","TextField","multiline","rows","placeholder","MyModal","show","handleClose","handleSave","Modal","size","onHide","Header","closeButton","Title","Body","Footer","Button","onClick","useStyles","makeStyles","list","fullList","TemporaryDrawer","Tasks","setTasks","copiedTasks","setCopiedTasks","useState","priority","status","deadline","setDeadline","useEffect","filter","TaskPriority","TaskStatus","filterByDeadline","TaskDeadline","getDate","Date","React","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","type","key","Fragment","style","height","Drawer","onClose","role","List","ListItem","button","Divider","MyNavbar","setShow","TaskNameInput","Navbar","bg","expand","Brand","href","Form","inline","FormControl","data","TaskName","startsWith","timeStamp","now","EditModal","itemTobeEdited","taskName","setTaskName","taskDetails","defaultValue","foundItem","find","ShowModal","itemTobeShowed","MyTable","itemModal","setItemModal","mouseOverPriority","setMouseOverPriority","priorityArrow","setPriorityArrow","priorityToNum","prio","mouseOverStatus","setMouseOverStatus","statusArrow","setStatusArrow","statusToNum","stat","mouseOverDeadline","setMouseOverDeadline","deadlineArrow","setDeadlineArrow","editModal","setEditModal","setItemTobeEdited","Table","striped","bordered","hover","onMouseEnter","onMouseLeave","sort","a","b","priorityColor","statusColor","Chip","toLocaleDateString","handleShowItem","handleShowEditModal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAkCeA,EA1BsB,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,UAAUC,EAAW,EAAXA,MAK1D,OACI,eAAC,IAAD,CAAaC,QAAQ,WAAWC,UAAWF,EAA3C,UACI,cAACG,EAAA,EAAD,CAAYC,GAAG,oCAAf,SAAoDP,IACpD,cAACQ,EAAA,EAAD,CAAQH,UAAU,OACdI,KAAMT,EACNU,QAAQ,oCACRH,GAAG,8BACHI,MAAM,MACNC,SAZS,SAACC,GAClB,IAAMC,EAASD,EAAMC,OACrBZ,EAAUY,EAAOC,QAKb,SAQQd,EAAMe,KAAI,SAACC,GACP,OACI,cAACC,EAAA,EAAD,CAAUH,MAAOE,EAAjB,SAAwBA,a,kCCdrC,SAASE,EAAT,GAAmE,IAAvCC,EAAsC,EAAtCA,gBAAgBC,EAAsB,EAAtBA,aAMzD,OACE,cAAC,IAAD,CAAyBC,MAAOC,IAAhC,SACE,cAACC,EAAA,EAAD,CAAMnB,UAAU,OAAOoB,WAAS,EAACC,QAAQ,eAAzC,SACE,cAAC,IAAD,CACEC,OAAO,SACPpB,GAAG,qBACHI,MAAM,qBACNiB,OAAO,aACPb,MAAOM,EACPT,SAbiB,SAACiB,GACxBT,EAAgBS,IAaVC,oBAAqB,CACnB,aAAc,qBChB1B,IAkCeC,EAlCoB,SAAC,GAAsG,IAArGC,EAAoG,EAApGA,iBAAiBC,EAAmF,EAAnFA,YAAYC,EAAuE,EAAvEA,UAAUd,EAA6D,EAA7DA,gBAAgBC,EAA6C,EAA7CA,aAAyBc,GAAoB,EAAhCC,YAAgC,EAApBD,gBASnH,OACE,mCACE,8BACE,uBAAME,YAAU,EAACC,aAAa,MAA9B,UACE,cAACC,EAAA,EAAD,CAAWlC,UAAU,YAAYO,SAZhB,SAACC,GACxB,IAAMC,EAASD,EAAMC,OACrBkB,EAAiBlB,EAAOC,QAU2CR,GAAG,iBAAiBI,MAAM,YAAYP,QAAQ,aAC3G,sBAAKC,UAAU,iCAAf,UACE,cAAC,EAAD,CAAaF,MAAO,OAAQH,MAAO,WAAYC,MAAO,CAAC,MAAO,SAAS,QAASC,UAAW+B,IAC3F,cAAC,EAAD,CAAa9B,MAAO,OAAQH,MAAO,SAAUC,MAAO,CAAC,QAAS,QAAS,QAASC,UAAWgC,IAC3F,cAACf,EAAD,CAAmBC,gBAAiBA,EAAiBC,aAAcA,OAEnE,cAACkB,EAAA,EAAD,CACElC,UAAU,kBACVE,GAAG,4BACHI,MAAM,eACN6B,WAAS,EACTC,KAAM,EACN7B,SApBoB,SAACC,GAC/B,IAAMC,EAASD,EAAMC,OACrBqB,EAAerB,EAAOC,QAmBZ2B,YAAY,kBACZtC,QAAQ,qBCKPuC,EA9BkB,SAAC,GAAkI,IAAjIC,EAAgI,EAAhIA,KAAKC,EAA2H,EAA3HA,YAAYC,EAA+G,EAA/GA,WAAWd,EAAoG,EAApGA,iBAAiBC,EAAmF,EAAnFA,YAAYC,EAAuE,EAAvEA,UAAUd,EAA6D,EAA7DA,gBAAgBC,EAA6C,EAA7CA,aAAae,EAAgC,EAAhCA,YAAYD,EAAoB,EAApBA,eAC7I,OACE,mCACE,eAACY,EAAA,EAAD,CAAOC,KAAK,KAAKJ,KAAMA,EAAMK,OAAQJ,EAArC,UACE,cAACE,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,yBAEF,cAACL,EAAA,EAAMM,KAAP,UACQ,cAAC,EAAD,CAAWrB,iBAAkBA,EACnBC,YAAaA,EACbC,UAAWA,EACXd,gBAAiBA,EACjBC,aAAcA,EACde,YAAaA,EACbD,eAAgBA,MAGlC,eAACY,EAAA,EAAMO,OAAP,CAAcjD,UAAU,iCAAxB,UACE,cAACkD,EAAA,EAAD,CAAQnD,QAAQ,QAAQoD,QAASX,EAAjC,oBAGA,cAACU,EAAA,EAAD,CAAQnD,QAAQ,UAAUoD,QAASV,EAAnC,2B,6DCbJW,EAAYC,YAAW,CACzBC,KAAM,CACFxD,MAAO,KAEXyD,SAAU,CACNzD,MAAO,UAMA,SAAS0D,EAAT,GAAmF,EAAxDC,MAAyD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,YACvD,GAD8F,EAA1BC,eACpCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBlC,EAAjB,KACA,EAA4BiC,mBAAS,OAArC,mBAAOE,EAAP,KAAelC,EAAf,KACA,EAAgCgC,mBAAS,OAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WAAK,IAAD,MAEM,QAAbJ,GAAiC,QAAXC,GAAiC,QAAbC,EACzCN,EAASC,EAAYQ,QAAO,SAACvD,GAAD,OAASA,EAAKwD,eAAiBN,MAE5C,QAAXC,GAAiC,QAAbD,GAAmC,QAAbE,EAC9CN,EAASC,EAAYQ,QAAO,SAACvD,GAAD,OAASA,EAAKyD,aAAeN,MAExC,QAAbC,GAAmC,QAAbF,GAAiC,QAAXC,EAChDL,EAASY,KAEM,QAAXP,GAAiC,QAAbD,GAAmC,QAAbE,EAC9CN,EAASC,EAAYQ,QAAO,SAACvD,GAAD,OAASA,EAAKyD,aAAeN,KAAQI,QAAO,SAACvD,GAAD,OAAQA,EAAKwD,eAAiBN,MAEvF,QAAXC,GAAiC,QAAbD,GAAmC,QAAbE,EAC9CN,EAAQ,UAACY,WAAD,aAAC,EAAoBH,QAAO,SAACvD,GAAD,OAASA,EAAKwD,eAAiBN,MAEpD,QAAXC,GAAiC,QAAbD,GAAmC,QAAbE,EAC9CN,EAAQ,UAACY,WAAD,aAAC,EAAoBH,QAAO,SAACvD,GAAD,OAASA,EAAKyD,aAAeN,MAEhD,QAAbC,GAAmC,QAAbF,GAAiC,QAAXC,EAChDL,EAAQ,UAACY,WAAD,aAAC,EAAoBH,QAAO,SAACvD,GAAD,OAASA,EAAKyD,aAAeN,KAAQI,QAAO,SAACvD,GAAD,OAASA,EAAKwD,eAAiBN,MAE9F,QAAbE,GAAkC,OAAZF,GAAgC,QAAXC,GAC/CL,EAASC,KAEf,CAACK,EAASF,EAASC,IACrB,IAAMO,EAAmB,WACrB,MAAgB,YAAbN,EACQL,EAAYQ,QAAO,SAACvD,GAAD,OAASA,EAAK2D,aAAaC,WAAY,IAAIC,MAAOD,aAC3D,mBAAbR,EACGL,EAAYQ,QAAO,SAACvD,GAAD,OAASA,EAAK2D,aAAaC,WAAY,IAAIC,MAAOD,aAC3D,cAAbR,EACGL,EAAYQ,QAAO,SAACvD,GAAD,OAASA,EAAK2D,aAAaC,aAAc,IAAIC,MAAOD,kBAD7E,GAIT,GADgBpB,IACUsB,IAAMb,SAAS,CACrCc,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,KAJX,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,EAAgBC,GAAjB,OAAmC,SACpD3E,IAGmB,YAAfA,EAAM4E,MACkC,QAAtC5E,EAA8B6E,KACW,UAAtC7E,EAA8B6E,MAIvCL,EAAS,2BAAKD,GAAN,kBAAcG,EAASC,OAsBnC,OACI,8BACI,eAAC,IAAMG,SAAP,WACI,cAAC,IAAD,CAActF,UAAU,OAAOuF,MAAO,CAAEzF,MAAO,OAAQ0F,OAAQ,QAAUrC,QAAS8B,EAAa,SAAS,KACxG,cAACQ,EAAA,EAAD,CAAQP,OAAQ,QAASC,KAAMJ,EAAK,MAAWW,QAAST,EAAa,SAAS,GAA9E,SAtBR,sBAAKU,KAAK,eAAV,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,+CAEJ,cAACA,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAAC,EAAD,CAAahG,MAAO,QAASH,MAAO,WAAYC,MAAO,CAAC,MAAM,MAAO,SAAS,QAASC,UAAW+B,KADhF,YAGtB,cAACiE,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAAC,EAAD,CAAahG,MAAO,QAASH,MAAO,SAAUC,MAAO,CAAC,MAAM,QAAS,QAAS,QAASC,UAAWgC,KADhF,UAGtB,cAACgE,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAAC,EAAD,CAAahG,MAAO,QAASH,MAAO,WAAYC,MAAO,CAAC,MAAO,UAAW,YAAa,kBAAmBC,UAAWoE,KADnG,eAI1B,cAAC8B,EAAA,EAAD,WAKqB,WC/FjC,IAuDeC,EAvDmB,SAAC,GAAoD,IAAnDvC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eAC9D,EAAwBC,oBAAS,GAAjC,mBAAOtB,EAAP,KAAa0D,EAAb,KACA,EAA0CpC,mBAAS,IAAnD,mBAAOqC,EAAP,KAAsBvE,EAAtB,KACA,EAA+BkC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBlC,EAAhB,KACA,EAA2BiC,mBAAS,IAApC,mBAAOE,EAAP,KAAclC,EAAd,KACA,EAAsCgC,mBAAS,IAA/C,mBAAO9B,EAAP,KAAoBD,EAApB,KACA,EAAwC+B,mBAAsB,IAAIY,MAAlE,mBAAOzD,EAAP,KAAqBD,EAArB,KAkBA,OACI,mCACI,eAACoF,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKrG,UAAU,QAAzC,UACI,sBAAKA,UAAU,uCAAf,UACI,8BACI,cAACmG,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,8BAEJ,8BACI,eAACC,EAAA,EAAD,CAAMC,QAAM,EAAZ,UACI,cAACC,EAAA,EAAD,CAAanG,SAhBhB,SAACC,GAClB,IAAMmG,EAAOnG,EAAMC,OACH,KAAbkG,EAAKjG,MACJgD,EAASC,GAETD,EAASD,EAAMU,QAAO,SAACvD,GAAD,OAASA,EAAKgG,SAASC,WAAWF,EAAKjG,YAWR0E,KAAK,OAAO/C,YAAY,SAASrC,UAAU,YAChF,cAAC,IAAD,CAAgBA,UAAU,OAAOuF,MAAO,CAACzF,MAAM,OAAQ0F,OAAO,QAASrC,QAlB5E,kBAAM8C,GAAQ,MAmBT,cAACzC,EAAD,CAAiBC,MAAOA,EAAOC,SAAUA,EACzCC,YAAaA,EAAaC,eAAgBA,YAKtD,cAAC,EAAD,CAASrB,KAAMA,EAAMC,YAlCb,WAChByD,GAAQ,IAkCSxD,WAhCF,WACf,IAAMqE,EAAYrC,KAAKsC,MACvBrD,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACvD,GAAG4G,EAAUF,SAASV,EAAc9B,aAAaN,EAASO,WAAWN,EAAOQ,aAAavD,EAAae,YAAYA,MACvI6B,EAAe,GAAD,mBAAKH,GAAL,CAAW,CAACvD,GAAG4G,EAAUF,SAASV,EAAc9B,aAAaN,EAASO,WAAWN,EAAOQ,aAAavD,EAAae,YAAYA,MAC5IkE,GAAQ,IA6BStE,iBAAkBA,EAClBC,YAAaA,EACbC,UAAWA,EACXd,gBAAiBA,EACjBC,aAAcA,EACde,YAAaA,EACbD,eAAgBA,U,0BCoE1BkF,EA9GqB,SAAC,GAAsE,IAApEzE,EAAmE,EAAnEA,KAAMK,EAA6D,EAA7DA,OAAQqE,EAAqD,EAArDA,eAAgBxD,EAAqC,EAArCA,MACjE,GADsG,EAA9BC,SAA8B,EAArBE,eACjDC,mBAASoD,EAAeL,WAAxD,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAgCtD,mBAASoD,EAAe7C,cAAxD,mBAAON,EAAP,KAAiBlC,EAAjB,KACA,EAAsCiC,mBAASoD,EAAelF,aAA9D,mBAAOqF,EAAP,KAAoBtF,EAApB,KACA,EAA4B+B,mBAASoD,EAAe5C,YAApD,mBAAON,EAAP,KAAelC,EAAf,KACA,EAAwCgC,mBAAe,IAAIY,MAA3D,mBAAOzD,EAAP,KAAqBD,EAArB,KA6BA,OACI,eAAC2B,EAAA,EAAD,CAAOH,KAAMA,EAAMK,OAAQA,EAA3B,UACI,cAACF,EAAA,EAAMG,OAAP,UACI,cAACH,EAAA,EAAMK,MAAP,0BAEJ,eAACL,EAAA,EAAMM,KAAP,WACI,cAACd,EAAA,EAAD,CAAW3B,SAlCG,SAACC,GACvB,IAAMmG,EAAOnG,EAAMC,OACnB0G,EAAYR,EAAKjG,QAgC+BV,UAAU,YAAYqH,aAAcJ,EAAeL,SAAU1G,GAAG,iBAAiBI,MAAM,YAAYP,QAAQ,aACnJ,gCACI,eAAC,IAAD,CAAaA,QAAQ,WAAWC,UAAU,OAA1C,UACI,cAACC,EAAA,EAAD,CAAYC,GAAG,oCAAf,sBACA,eAACC,EAAA,EAAD,CAAQH,UAAU,OAAOI,KAAK,WAC1BC,QAAQ,oCACRH,GAAG,8BAA8BI,MAAM,MACvC+G,aAAcJ,EAAe7C,aAC7B7D,SAtCK,SAACC,GAC1B,IAAMC,EAASD,EAAMC,OACrBmB,EAAYnB,EAAOC,QAgCH,UAMI,cAACG,EAAA,EAAD,CAAUH,MAAOuG,EAAe7C,aAAhC,SAA+C6C,EAAe7C,eAC9B,OAA/B6C,EAAe7C,cAAyB,cAACvD,EAAA,EAAD,CAAUH,MAAO,MAAjB,iBACT,UAA/BuG,EAAe7C,cAA4B,cAACvD,EAAA,EAAD,CAAUH,MAAO,SAAjB,oBACZ,QAA/BuG,EAAe7C,cAA0B,cAACvD,EAAA,EAAD,CAAUH,MAAO,OAAjB,wBAGlD,eAAC,IAAD,CAAaX,QAAQ,WAAWC,UAAU,OAA1C,UACI,cAACC,EAAA,EAAD,CAAYC,GAAG,oCAAf,sBACA,eAACC,EAAA,EAAD,CAAQH,UAAU,OAAOI,KAAK,WAC1BC,QAAQ,oCACRH,GAAG,8BAA8BI,MAAM,MACvC+G,aAAcJ,EAAe5C,WAC7B9D,SAhDG,SAACC,GACxB,IAAMC,EAASD,EAAMC,OACrBoB,EAAUpB,EAAOC,QA0CD,UAMI,cAACG,EAAA,EAAD,CAAUH,MAAOuG,EAAe5C,WAAhC,SAA6C4C,EAAe5C,aAC9B,SAA7B4C,EAAe5C,YAAyB,cAACxD,EAAA,EAAD,CAAUH,MAAO,QAAjB,mBACX,SAA7BuG,EAAe5C,YAAyB,cAACxD,EAAA,EAAD,CAAUH,MAAO,QAAjB,mBACX,QAA7BuG,EAAe5C,YAAwB,cAACxD,EAAA,EAAD,CAAUH,MAAO,OAAjB,wBAGhD,cAAC,IAAD,CAAyBO,MAAOC,IAAhC,SACI,cAACC,EAAA,EAAD,CAAMnB,UAAU,OAAOoB,WAAS,EAACC,QAAQ,eAAzC,SACI,cAAC,IAAD,CACIC,OAAO,SACPpB,GAAG,qBACHI,MAAM,qBACNiB,OAAO,aACPb,MAAOM,EACPqG,aAAcJ,EAAe1C,aAC7BhE,SApDH,SAACiB,GACtBT,EAAgBS,IAoDQC,oBAAqB,CACjB,aAAc,qBAK9B,cAACS,EAAA,EAAD,CACIlC,UAAU,kBACVE,GAAG,4BACHI,MAAM,eACN6B,WAAS,EACTC,KAAM,EACN7B,SA9DW,SAACC,GAC5B,IAAMmG,EAAOnG,EAAMC,OACnBqB,EAAe6E,EAAKjG,QA6DJ2G,aAAcJ,EAAelF,YAC7BM,YAAY,kBACZtC,QAAQ,mBAIpB,eAAC2C,EAAA,EAAMO,OAAP,CAAcjD,UAAU,iCAAxB,UACI,cAACkD,EAAA,EAAD,CAAQnD,QAAQ,QAAQoD,QAASP,EAAjC,oBAGA,cAACM,EAAA,EAAD,CAAQnD,QAAQ,UAAUoD,QArFnB,WACf,IAAMmE,EAAY7D,EAAM8D,MAAK,SAAC3G,GAAD,OAAUA,EAAKV,KAAO+G,EAAe/G,MAClEgH,IAAaI,EAAWV,SAAWM,GACnCpD,IAAawD,EAAWlD,aAAeN,GACvCC,IAAWuD,EAAWjD,WAAaN,GACnC/C,IAAiBsG,EAAW/C,aAAevD,GAC3CoG,IAAgBE,EAAWvF,YAAcqF,GACzCxE,KA8EQ,yBC/CD4E,EA5DqB,SAAC,GAAsC,IAApCjF,EAAmC,EAAnCA,KAAMK,EAA6B,EAA7BA,OAAQ6E,EAAqB,EAArBA,eAEjD,OACI,eAAC/E,EAAA,EAAD,CAAOH,KAAMA,EAAMK,OAAQA,EAA3B,UACI,cAACF,EAAA,EAAMG,OAAP,UACI,cAACH,EAAA,EAAMK,MAAP,0BAEJ,eAACL,EAAA,EAAMM,KAAP,WACI,cAACd,EAAA,EAAD,CAAWlC,UAAU,YAAYU,MAAO+G,EAAeb,SAAU1G,GAAG,iBAAiBI,MAAM,YAAYP,QAAQ,aAC/G,gCACI,eAAC,IAAD,CAAaA,QAAQ,WAAWC,UAAU,OAA1C,UACI,cAACC,EAAA,EAAD,CAAYC,GAAG,oCAAf,sBACA,cAACC,EAAA,EAAD,CAAQH,UAAU,OAAOI,KAAK,WAC1BC,QAAQ,oCACRH,GAAG,8BAA8BI,MAAM,MACvCI,MAAO+G,EAAerD,aAH1B,SAKI,cAACvD,EAAA,EAAD,CAAUH,MAAO+G,EAAerD,aAAhC,SAA+CqD,EAAerD,oBAGtE,eAAC,IAAD,CAAarE,QAAQ,WAAWC,UAAU,OAA1C,UACI,cAACC,EAAA,EAAD,CAAYC,GAAG,oCAAf,sBACA,cAACC,EAAA,EAAD,CAAQH,UAAU,OAAOI,KAAK,WAC1BC,QAAQ,oCACRH,GAAG,8BAA8BI,MAAM,MACvCI,MAAO+G,EAAepD,WAH1B,SAKI,cAACxD,EAAA,EAAD,CAAUH,MAAO+G,EAAepD,WAAhC,SAA6CoD,EAAepD,kBAGpE,cAAC,IAAD,CAAyBpD,MAAOC,IAAhC,SACI,cAACC,EAAA,EAAD,CAAMnB,UAAU,OAAOoB,WAAS,EAACC,QAAQ,eAAzC,SACI,cAAC,IAAD,CACIC,OAAO,SACPpB,GAAG,qBACHI,MAAM,qBACNiB,OAAO,aACPb,MAAO+G,EAAelD,aACtBhE,SArCZ,aAsCYkB,oBAAqB,CACjB,aAAc,qBAK9B,cAACS,EAAA,EAAD,CACIlC,UAAU,kBACVE,GAAG,4BACHI,MAAM,eACN6B,WAAS,EACTC,KAAM,EACN1B,MAAO+G,EAAe1F,YACtBM,YAAY,kBACZtC,QAAQ,uBC+FjB2H,EArJmB,SAAC,GAAsD,IAApDjE,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAuBE,GAAqB,EAAlCD,YAAkC,EAArBC,gBAC/D,EAAwBC,oBAAS,GAAjC,mBAAOtB,EAAP,KAAa0D,EAAb,KAOA,EAAkCpC,mBAAiB,CAC/CU,aAAc,IAAIE,KAAO1C,YAAY,OACrC6E,SAAU,UAAWxC,aAAc,OAAQC,WAAY,QAASnE,GAAI,IAFxE,mBAAOyH,EAAP,KAAkBC,EAAlB,KAWA,EAAkD/D,oBAAS,GAA3D,mBAAOgE,EAAP,KAA0BC,EAA1B,KAGA,EAA0CjE,mBAAS,GAAnD,mBAAOkE,EAAP,KAAsBC,EAAtB,KACMC,EAAgB,SAACC,GACnB,MAAa,SAATA,EAAwB,EACV,WAATA,EAA0B,EACvB,GAahB,EAA8CrE,oBAAS,GAAvD,mBAAOsE,EAAP,KAAwBC,EAAxB,KAGA,EAAsCvE,mBAAS,GAA/C,mBAAOwE,EAAP,KAAoBC,EAApB,KACMC,EAAc,SAACC,GACjB,MAAa,UAATA,EAAyB,EACX,UAATA,EAAyB,EACtB,GAahB,EAAkD3E,oBAAS,GAA3D,mBAAO4E,EAAP,KAA0BC,EAA1B,KAGA,EAA0C7E,mBAAS,GAAnD,mBAAO8E,EAAP,KAAsBC,EAAtB,KAYA,EAAkC/E,oBAAS,GAA3C,mBAAOgF,EAAP,KAAkBC,EAAlB,KACA,EAA4CjF,mBAAiB,CAAE3D,GAAI,EAAGmE,WAAY,GAAIE,aAAc,GAAIqC,SAAU,GAAIxC,aAAc,GAAGrC,YAAY,KAAnJ,mBAAOkF,EAAP,KAAuB8B,EAAvB,KAQA,OACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,sCACA,qBAAIC,aApEY,kBAAMtB,GAAqB,IAqEvCuB,aApEW,kBAAMvB,GAAqB,IAqEtC3E,QA9DQ,WACxB6E,EAAiBD,EAAgB,IAC5BA,EAAgB,GAAK,IAAM,EAC5BrE,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErJ,GAAKsJ,EAAEtJ,QACjC6H,EAAgB,GAAK,IAAM,EACjCrE,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUvB,EAAcuB,EAAEpF,cAAgB6D,EAAcsB,EAAEnF,mBACxE2D,EAAgB,GAAK,IAAM,GACjCrE,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUvB,EAAcsB,EAAEnF,cAAgB6D,EAAcuB,EAAEpF,mBAqDtE,sBAGY2D,EAAgB,IAAO,GAAK,cAAC,IAAD,IAClCA,EAAgB,IAAO,GAAK,cAAC,IAAD,IAC7BF,GAAsBE,EAAgB,IAAO,GAAK,cAAC,IAAD,OAEvD,qBAAIqB,aAvDU,kBAAMhB,GAAmB,IAwDnCiB,aAvDS,kBAAMjB,GAAmB,IAwDlCjF,QAjDM,WACtBmF,EAAeD,EAAc,IACxBA,EAAc,GAAK,IAAM,EAC1B3E,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErJ,GAAKsJ,EAAEtJ,QACjCmI,EAAc,GAAK,IAAM,EAC/B3E,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUjB,EAAYiB,EAAEnF,YAAckE,EAAYgB,EAAElF,iBAClEgE,EAAc,GAAK,IAAM,GAC/B3E,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUjB,EAAYgB,EAAElF,YAAckE,EAAYiB,EAAEnF,iBAwChE,oBAGUgE,EAAc,IAAO,GAAK,cAAC,IAAD,IAC9BA,EAAc,IAAO,GAAK,cAAC,IAAD,IAC3BF,GAAoBE,EAAc,IAAO,GAAK,cAAC,IAAD,OAEnD,qBAAIe,aA1CY,kBAAMV,GAAqB,IA2CvCW,aA1CW,kBAAMX,GAAqB,IA2CtCvF,QAzCQ,WACxByF,EAAiBD,EAAgB,IAC5BA,EAAgB,GAAK,IAAM,EAC5BjF,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErJ,GAAKsJ,EAAEtJ,QACjCyI,EAAgB,GAAK,IAAM,EACjCjF,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEjF,aAAegF,EAAEhF,kBAC3CoE,EAAgB,GAAK,IAAM,GACjCjF,EAASD,EAAM6F,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEhF,aAAeiF,EAAEjF,kBAgCzC,sBAGYoE,EAAgB,IAAO,GAAK,cAAC,IAAD,IAClCA,EAAgB,IAAO,GAAK,cAAC,IAAD,IAC7BF,GAAsBE,EAAgB,IAAO,GAAK,cAAC,IAAD,OACvD,8CAGR,wBAAO3I,UAAU,cAAjB,UACI,cAAC,EAAD,CAAWuC,KAAMA,EAAMK,OA9Gf,kBAAMqD,GAAQ,IA+GlBwB,eAAgBE,IAEpB,cAAC,EAAD,CAAWpF,KAAMsG,EAAWjG,OAvCX,kBAAMkG,GAAa,IAwChC7B,eAAgBA,EAChBxD,MAAOA,EAAOC,SAAUA,EACxBE,eAAgBA,IAEhBH,EAAM9C,KAAI,SAACC,GACP,IAAMY,EAAOZ,EAAK2D,aACdkF,EAAgB,GACM,SAAtB7I,EAAKwD,aACLqF,EAAgB,uBACW,WAAtB7I,EAAKwD,eACVqF,EAAgB,yBACpB,IAAIC,EAAc,GAOlB,OALIA,EADoB,SAApB9I,EAAKyD,WACS,wBACW,UAApBzD,EAAKyD,WACI,wBAEA,wBAEd,+BACI,6BAAKzD,EAAKgG,WACV,6BAAI,cAAC+C,EAAA,EAAD,CAAM3J,UAAWyJ,EAAenJ,MAAOM,EAAKwD,iBAChD,6BAAI,cAACuF,EAAA,EAAD,CAAM3J,UAAW0J,EAAapJ,MAAOM,EAAKyD,eAC9C,6BAAK7C,EAAKoI,uBACV,+BAAI,cAAC,IAAD,CAAU5J,UAAU,OAAOmD,QAAS,kBAhI7C,SAACjD,GACpB,IAAMoH,EAAY7D,EAAM8D,MAAK,SAAC3G,GAAD,OAAUA,EAAKV,KAAOA,KACnDoH,GAAaM,EAAaN,GAC1BrB,GAAQ,GA6H8D4D,CAAejJ,EAAKV,OAAO,cAAC,IAAD,CAAaiD,QAAS,kBA/D/F,SAACjD,GACzB,IAAMoH,EAAY7D,EAAM8D,MAAK,SAAC3G,GAAD,OAAUA,EAAKV,KAAOA,KACnDoH,GAAayB,EAAkBzB,GAC/BwB,GAAa,GA4DgHgB,CAAoBlJ,EAAKV,KAAKF,UAAU,SAAS,cAAC,IAAD,CAAYA,UAAU,OAAOmD,QAAS,kBAzIlMjD,EAyIqNU,EAAKV,GAxI5OwD,EAASD,EAAMU,QAAO,SAACvD,GAAD,OAAUV,IAAOU,EAAKV,YAC5C0D,EAAeH,GAFE,IAACvD,qBCAX6J,MAZf,WACE,MAA0BlG,mBAAmB,IAA7C,mBAAOJ,EAAP,KAAcC,EAAd,KACA,EAAsCG,mBAAmB,IAAzD,mBAAOF,EAAP,KAAoBC,EAApB,KACA,OACE,gCACE,cAAC,EAAD,CAAUH,MAAOA,EAAOC,SAAUA,EAClCC,YAAaA,EAAaC,eAAgBA,IAC1C,cAAC,EAAD,CAASH,MAAOA,EAAOC,SAAUA,EACjCC,YAAaA,EAAaC,eAAgBA,QCPjCoG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d932aee6.chunk.js","sourcesContent":["import { InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport React from 'react';\ninterface IProps{\n    title:string;\n    items:string[];\n    setFilter:any;\n    width:string;\n}\nconst SelectInput:React.FC<IProps> = ({title, items,setFilter,width}) => {\n    const handleChange = (event:any)=>{\n        const target = event.target as HTMLSelectElement; \n        setFilter(target.value)\n    }\n    return (\n        <FormControl variant=\"outlined\" className={width}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">{title}</InputLabel>\n            <Select className=\"mx-2\"\n                name={title}\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                label=\"Age\"\n                onChange={handleChange}\n            >\n                {\n                    items.map((item)=>{\n                        return(\n                            <MenuItem value={item}>{item}</MenuItem>\n                        )\n                    })\n                }\n            </Select>\n        </FormControl>\n    )\n}\nexport default SelectInput;","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\ninterface IProps{\n  setSelectedDate:Function;\n  selectedDate:any;\n}\nexport default function MaterialUIPickers({setSelectedDate,selectedDate}:IProps) {\n  // The first commit of Material-UI\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid className=\"w-50\" container justify=\"space-around\">\n        <KeyboardDatePicker\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"Date picker dialog\"\n          format=\"MM/dd/yyyy\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import { TextField } from '@material-ui/core';\nimport SelectInput from '../selectInput/SelectInput';\nimport MaterialUIPickers from '../date-input/DateInput'\nimport {useState} from 'react'\ninterface IProps{\n  setTaskNameInput:Function;\n  setPriority:Function;\n  setStatus:Function;\n  setSelectedDate:Function;\n  selectedDate:any;\n  TaskDetails:string;\n  setTaskDetails:Function;\n}\nconst TaskInput:React.FC<IProps> = ({setTaskNameInput,setPriority,setStatus,setSelectedDate,selectedDate,TaskDetails,setTaskDetails}) => {\n  const handleTaskChange = (event:React.ChangeEvent)=>{\n    const target = event.target as HTMLInputElement; \n    setTaskNameInput(target.value)\n  }\n  const handleTaskDetailsChange = (event:React.ChangeEvent)=>{\n    const target = event.target as HTMLInputElement; \n    setTaskDetails(target.value)\n  }\n  return (\n    <>\n      <div>\n        <form noValidate autoComplete=\"off\">\n          <TextField className=\"mx-2 my-3\" onChange={handleTaskChange} id=\"outlined-basic\" label=\"Task Name\" variant=\"outlined\" />\n          <div className=\"d-flex justify-content-between\">\n            <SelectInput width={\"w-25\"} title={\"Priority\"} items={[\"Low\", \"Medium\",\"High\"]} setFilter={setPriority}/>\n            <SelectInput width={\"w-25\"} title={\"Status\"} items={[\"To do\", \"Doing\", \"Done\"]} setFilter={setStatus}/>\n            <MaterialUIPickers setSelectedDate={setSelectedDate} selectedDate={selectedDate}/>\n          </div>\n            <TextField\n              className=\"w-100 mx-2 mt-3\"\n              id=\"outlined-multiline-static\"\n              label=\"Task Details\"\n              multiline\n              rows={4}\n              onChange={handleTaskDetailsChange}\n              placeholder=\"Task Details...\"\n              variant=\"outlined\"\n            />\n        </form>\n      </div>\n    </>\n  )\n}\nexport default TaskInput;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport TaskInput from '../task-input/TaskInput'\ninterface IProps {\n    show:boolean,\n    handleClose:any;\n    handleSave:any;\n    setTaskNameInput:Function;\n    setPriority:Function;\n    setStatus:Function;\n    setSelectedDate:Function;\n    selectedDate:any;\n    TaskDetails:string;\n    setTaskDetails:Function;\n}\nconst MyModal:React.FC<IProps> = ({show,handleClose,handleSave,setTaskNameInput,setPriority,setStatus,setSelectedDate,selectedDate,TaskDetails,setTaskDetails}) => {\n  return (\n    <>\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n                <TaskInput setTaskNameInput={setTaskNameInput}\n                          setPriority={setPriority}\n                          setStatus={setStatus}\n                          setSelectedDate={setSelectedDate}\n                          selectedDate={selectedDate}\n                          TaskDetails={TaskDetails}\n                          setTaskDetails={setTaskDetails}\n                />\n        </Modal.Body>\n        <Modal.Footer className=\"d-flex justify-content-between\">\n          <Button variant=\"light\" onClick={handleClose}>\n            CANCEL\n          </Button>\n          <Button variant=\"primary\" onClick={handleSave}>\n            SAVE\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default MyModal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport { BsFunnelFill } from \"react-icons/bs\";\nimport SelectInput from '../selectInput/SelectInput';\nimport {useState, useEffect} from 'react'\ninterface ITasks {\n    id: number;\n    TaskName: string;\n    TaskPriority: string;\n    TaskStatus: string;\n    TaskDeadline: any;\n    TaskDetails: string;\n}\ninterface IProps {\n    Tasks: ITasks[];\n    setTasks: Function;\n    copiedTasks: ITasks[];\n    setCopiedTasks: Function;\n}\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\ntype Anchor = 'left' | 'right';\n\nexport default function TemporaryDrawer({ Tasks, setTasks, copiedTasks, setCopiedTasks }: IProps) {\n    const [priority, setPriority] = useState(\"All\");\n    const [status, setStatus] = useState(\"All\");\n    const [deadline, setDeadline] = useState(\"All\");\n    useEffect(()=>{\n        //filters just based on priority\n        if(priority !== \"All\" && status === \"All\" && deadline === \"All\")\n            setTasks(copiedTasks.filter((item)=> item.TaskPriority === priority))\n        //filters just based on status\n        else if(status !== \"All\" && priority === \"All\" && deadline === \"All\")\n            setTasks(copiedTasks.filter((item)=> item.TaskStatus === status))\n        //filters just based on deadline\n        else if(deadline !== \"All\" && priority === \"All\" && status === \"All\")\n            setTasks(filterByDeadline())\n        //filters based on priority and status\n        else if(status !== \"All\" && priority !== \"All\" && deadline === \"All\")\n            setTasks(copiedTasks.filter((item)=> item.TaskStatus === status).filter((item)=>item.TaskPriority === priority))\n        //filters based on priority and deadline\n        else if(status === \"All\" && priority !== \"All\" && deadline !== \"All\")\n            setTasks(filterByDeadline()?.filter((item)=> item.TaskPriority === priority))\n        //filters based on priority and deadline\n        else if(status !== \"All\" && priority === \"All\" && deadline !== \"All\")\n            setTasks(filterByDeadline()?.filter((item)=> item.TaskStatus === status))\n        //filters based on all options\n        else if(deadline !== \"All\" && priority !== \"All\" && status !== \"All\")\n            setTasks(filterByDeadline()?.filter((item)=> item.TaskStatus === status).filter((item)=> item.TaskPriority === priority))\n        //filters no item\n        else if(deadline === \"All\" && priority == \"All\" && status === \"All\")\n            setTasks(copiedTasks)\n\n    },[deadline,priority,status])\n    const filterByDeadline = ()=>{\n        if(deadline === 'Overdue' )\n            return copiedTasks.filter((item)=> item.TaskDeadline.getDate() < new Date().getDate())\n        else if(deadline === 'For the future')\n            return copiedTasks.filter((item)=> item.TaskDeadline.getDate() > new Date().getDate())\n        else if(deadline === 'For today')\n            return copiedTasks.filter((item)=> item.TaskDeadline.getDate() === new Date().getDate())\n    }\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\n        event: React.KeyboardEvent | React.MouseEvent,\n    ) => {\n        if (\n            event.type === 'keydown' &&\n            ((event as React.KeyboardEvent).key === 'Tab' ||\n                (event as React.KeyboardEvent).key === 'Shift')\n        ) {\n            return;\n        }\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor: Anchor) => (\n        <div role=\"presentation\">\n            <List>\n                <ListItem>\n                    <h1>Todo Filter</h1>\n                </ListItem>\n                <ListItem button key={\"Priority\"}>\n                    <SelectInput width={\"w-100\"} title={\"Priority\"} items={[\"All\",\"Low\", \"Medium\",\"High\"]} setFilter={setPriority}/>\n                </ListItem>\n                <ListItem button key={\"Status\"}>\n                    <SelectInput width={\"w-100\"} title={\"Status\"} items={[\"All\",\"To do\", \"Doing\", \"Done\"]} setFilter={setStatus}/>\n                </ListItem>\n                <ListItem button key={\"Deadline\"}>\n                    <SelectInput width={\"w-100\"} title={\"Deadline\"} items={[\"All\", \"Overdue\", \"For today\", \"For the future\"]} setFilter={setDeadline}/>\n                </ListItem>\n            </List>\n            <Divider />\n        </div>\n    );\n    return (\n        <div>\n            <React.Fragment key={'right'}>\n                <BsFunnelFill className=\"mx-2\" style={{ width: \"25px\", height: \"25px\" }} onClick={toggleDrawer('right', true)} />\n                <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n                    {list('right')}\n                </Drawer>\n            </React.Fragment>\n        </div>\n    );\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsFunnelFill, BsPencilSquare } from \"react-icons/bs\";\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap'\nimport React, { useState } from 'react'\nimport MyModal from '../modal/modal';\nimport TemporaryDrawer from '../sidebar/sidebar'\ninterface ITasks {\n    id: number;\n    TaskName: string;\n    TaskPriority: string;\n    TaskStatus: string;\n    TaskDeadline: any;\n    TaskDetails:string;\n}\ninterface IProps {\n    Tasks:ITasks[];\n    setTasks:Function;\n    copiedTasks:ITasks[];\n    setCopiedTasks:Function;\n}\nconst MyNavbar:React.FC<IProps> = ({Tasks, setTasks, copiedTasks, setCopiedTasks}) => {\n    const [show, setShow] = useState(false);\n    const [TaskNameInput, setTaskNameInput] = useState(\"\");\n    const [priority,setPriority] = useState(\"\");\n    const [status,setStatus] = useState(\"\");\n    const [TaskDetails, setTaskDetails] = useState(\"\")\n    const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\n    const handleClose = () => {\n        setShow(false);\n    };\n    const handleSave = ()=>{\n        const timeStamp = Date.now()\n        setTasks([...Tasks, {id:timeStamp,TaskName:TaskNameInput,TaskPriority:priority,TaskStatus:status,TaskDeadline:selectedDate,TaskDetails:TaskDetails}])\n        setCopiedTasks([...Tasks,{id:timeStamp,TaskName:TaskNameInput,TaskPriority:priority,TaskStatus:status,TaskDeadline:selectedDate,TaskDetails:TaskDetails}])\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n    const handleSearch = (event:React.ChangeEvent)=>{\n        const data = event.target as HTMLInputElement;\n        if(data.value===\"\")\n            setTasks(copiedTasks)\n        else\n            setTasks(Tasks.filter((item)=> item.TaskName.startsWith(data.value)))\n    }\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\" className=\"w-100\">\n                <div className=\"d-flex justify-content-between w-100\">\n                    <div>\n                        <Navbar.Brand href=\"#home\">My To-Do Tasks</Navbar.Brand>\n                    </div>\n                    <div>\n                        <Form inline>\n                            <FormControl onChange={handleSearch} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                            <BsPencilSquare className=\"mx-2\" style={{width:\"25px\", height:\"25px\"}} onClick={handleShow}/>\n                            <TemporaryDrawer Tasks={Tasks} setTasks={setTasks}\n                            copiedTasks={copiedTasks} setCopiedTasks={setCopiedTasks}\n                            />\n                        </Form>\n                    </div>\n                </div>\n                <MyModal show={show} handleClose={handleClose}\n                         handleSave={handleSave} \n                         setTaskNameInput={setTaskNameInput} \n                         setPriority={setPriority}\n                         setStatus={setStatus}\n                         setSelectedDate={setSelectedDate}\n                         selectedDate={selectedDate}\n                         TaskDetails={TaskDetails}\n                         setTaskDetails={setTaskDetails}\n                         />      \n            </Navbar>\n        </>\n    )\n}\nexport default MyNavbar;","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { TextField, InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\nimport { useState } from 'react'\ninterface ITasks {\n    id: number;\n    TaskName: string;\n    TaskPriority: string;\n    TaskStatus: string;\n    TaskDeadline: any;\n    TaskDetails:string;\n}\ninterface IProps {\n    show: boolean;\n    onHide: Function;\n    itemTobeEdited: ITasks;\n    Tasks: ITasks[];\n    setTasks: Function;\n    setCopiedTasks:Function;\n}\n\nconst EditModal: React.FC<IProps> = ({ show, onHide, itemTobeEdited, Tasks, setTasks,setCopiedTasks }) => {\n    const [taskName, setTaskName] = useState(itemTobeEdited.TaskName);\n    const [priority, setPriority] = useState(itemTobeEdited.TaskPriority);\n    const [taskDetails, setTaskDetails] = useState(itemTobeEdited.TaskDetails);\n    const [status, setStatus] = useState(itemTobeEdited.TaskStatus);\n    const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n    const handleInputChange = (event: React.ChangeEvent) => {\n        const data = event.target as HTMLInputElement;\n        setTaskName(data.value)\n    }\n    const handlePriorityChange = (event: any) => {\n        const target = event.target as HTMLSelectElement;\n        setPriority(target.value)\n    }\n    const handleStatusChange = (event: any) => {\n        const target = event.target as HTMLSelectElement;\n        setStatus(target.value)\n    }\n    const handleSave = () => {\n        const foundItem = Tasks.find((item) => item.id === itemTobeEdited.id)\n        taskName && (foundItem!.TaskName = taskName);\n        priority && (foundItem!.TaskPriority = priority);\n        status && (foundItem!.TaskStatus = status);\n        selectedDate && (foundItem!.TaskDeadline = selectedDate);\n        taskDetails && (foundItem!.TaskDetails = taskDetails);\n        onHide()\n    }\n    const handleDateChange = (date: any) => {\n        setSelectedDate(date)\n    }\n    const handleTaskDetailChange = (event: React.ChangeEvent)=>{\n        const data = event.target as HTMLInputElement;\n        setTaskDetails(data.value)\n    }\n    return (\n        <Modal show={show} onHide={onHide}>\n            <Modal.Header >\n                <Modal.Title>Edit Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <TextField onChange={handleInputChange} className=\"mx-2 my-3\" defaultValue={itemTobeEdited.TaskName} id=\"outlined-basic\" label=\"Task Name\" variant=\"outlined\" />\n                <div>\n                    <FormControl variant=\"outlined\" className=\"w-25\">\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Priority</InputLabel>\n                        <Select className=\"mx-2\" name=\"Priority\"\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\" label=\"Age\"\n                            defaultValue={itemTobeEdited.TaskPriority}\n                            onChange={handlePriorityChange}\n                        >\n                            <MenuItem value={itemTobeEdited.TaskPriority}>{itemTobeEdited.TaskPriority}</MenuItem>\n                            {itemTobeEdited.TaskPriority != \"Low\" && <MenuItem value={\"Low\"}>Low</MenuItem>}\n                            {itemTobeEdited.TaskPriority != \"Medium\" && <MenuItem value={\"Medium\"}>Medium</MenuItem>}\n                            {itemTobeEdited.TaskPriority != \"High\" && <MenuItem value={\"High\"}>High</MenuItem>}\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className=\"w-25\">\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Priority</InputLabel>\n                        <Select className=\"mx-2\" name=\"Priority\"\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\" label=\"Age\"\n                            defaultValue={itemTobeEdited.TaskStatus}\n                            onChange={handleStatusChange}\n                        >\n                            <MenuItem value={itemTobeEdited.TaskStatus}>{itemTobeEdited.TaskStatus}</MenuItem>\n                            {itemTobeEdited.TaskStatus != \"To do\" && <MenuItem value={\"To do\"}>To do</MenuItem>}\n                            {itemTobeEdited.TaskStatus != \"Doing\" && <MenuItem value={\"Doing\"}>Doing</MenuItem>}\n                            {itemTobeEdited.TaskStatus != \"Done\" && <MenuItem value={\"Done\"}>Done</MenuItem>}\n                        </Select>\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid className=\"w-50\" container justify=\"space-around\">\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Date picker dialog\"\n                                format=\"MM/dd/yyyy\"\n                                value={selectedDate}\n                                defaultValue={itemTobeEdited.TaskDeadline}\n                                onChange={handleDateChange}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n                    <TextField\n                        className=\"w-100 mx-2 mt-3\"\n                        id=\"outlined-multiline-static\"\n                        label=\"Task Details\"\n                        multiline\n                        rows={4}\n                        onChange={handleTaskDetailChange}\n                        defaultValue={itemTobeEdited.TaskDetails}\n                        placeholder=\"Task Details...\"\n                        variant=\"outlined\"\n                    />\n                </div>\n            </Modal.Body>\n            <Modal.Footer className=\"d-flex justify-content-between\">\n                <Button variant=\"light\" onClick={onHide as React.MouseEventHandler<HTMLElement>} >\n                    CANCEL\n                </Button>\n                <Button variant=\"primary\" onClick={handleSave}>\n                    SAVE\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default EditModal\n","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { TextField, InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers';\ninterface ITasks {\n    id: number;\n    TaskName: string;\n    TaskPriority: string;\n    TaskStatus: string;\n    TaskDeadline: any;\n    TaskDetails:string;\n}\ninterface IProps {\n    show: boolean;\n    onHide: Function;\n    itemTobeShowed: ITasks;\n}\n\nconst ShowModal: React.FC<IProps> = ({ show, onHide, itemTobeShowed }) => {\n    const nothing = () => { }\n    return (\n        <Modal show={show} onHide={onHide}>\n            <Modal.Header >\n                <Modal.Title>Edit Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <TextField className=\"mx-2 my-3\" value={itemTobeShowed.TaskName} id=\"outlined-basic\" label=\"Task Name\" variant=\"outlined\" />\n                <div>\n                    <FormControl variant=\"outlined\" className=\"w-25\">\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Priority</InputLabel>\n                        <Select className=\"mx-2\" name=\"Priority\"\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\" label=\"Age\"\n                            value={itemTobeShowed.TaskPriority}\n                        >\n                            <MenuItem value={itemTobeShowed.TaskPriority}>{itemTobeShowed.TaskPriority}</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className=\"w-25\">\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Priority</InputLabel>\n                        <Select className=\"mx-2\" name=\"Priority\"\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\" label=\"Age\"\n                            value={itemTobeShowed.TaskStatus}\n                        >\n                            <MenuItem value={itemTobeShowed.TaskStatus}>{itemTobeShowed.TaskStatus}</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid className=\"w-50\" container justify=\"space-around\">\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Date picker dialog\"\n                                format=\"MM/dd/yyyy\"\n                                value={itemTobeShowed.TaskDeadline}\n                                onChange={nothing}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n                    <TextField\n                        className=\"w-100 mx-2 mt-3\"\n                        id=\"outlined-multiline-static\"\n                        label=\"Task Details\"\n                        multiline\n                        rows={4}\n                        value={itemTobeShowed.TaskDetails}\n                        placeholder=\"Task Details...\"\n                        variant=\"outlined\"\n                    />\n                </div>\n            </Modal.Body>\n        </Modal>\n    )\n}\nexport default ShowModal\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Chip from '@material-ui/core/Chip';\nimport { FaRegEye, FaPencilAlt, FaTrashAlt, FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { Table } from 'react-bootstrap'\nimport { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport EditModal from '../modalforedit/editModal'\nimport ShowModal from '../showModal/showModal'\ninterface ITasks {\n    id: number;\n    TaskName: string;\n    TaskPriority: string;\n    TaskStatus: string;\n    TaskDeadline: any;\n    TaskDetails:string;\n}\ninterface IProps {\n    Tasks: ITasks[];\n    setTasks: Function;\n    copiedTasks: ITasks[];\n    setCopiedTasks: Function;\n}\nconst MyTable: React.FC<IProps> = ({ Tasks, setTasks, copiedTasks, setCopiedTasks }) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleRemove = (id: number) => {\n        setTasks(Tasks.filter((item) => id !== item.id))\n        setCopiedTasks(Tasks)\n    }\n    //show item modal start\n    const [itemModal, setItemModal] = useState<ITasks>({\n        TaskDeadline: new Date(),TaskDetails:\"shit\",\n        TaskName: \"nothing\", TaskPriority: \"High\", TaskStatus: \"To do\", id: 1\n    });\n    const handleShowItem = (id: number) => {\n        const foundItem = Tasks.find((item) => item.id === id) \n        foundItem && setItemModal(foundItem)\n        setShow(true);\n    }\n    //show item modal end\n    //filter by priority start\n    const [mouseOverPriority, setMouseOverPriority] = useState(false);\n    const handleMouseOverPriority = () => setMouseOverPriority(true)\n    const handleMouseOutPriority = () => setMouseOverPriority(false)\n    const [priorityArrow, setPriorityArrow] = useState(0)\n    const priorityToNum = (prio: string) => {\n        if (prio === \"High\") return 3;\n        else if (prio === \"Medium\") return 2;\n        else return 1;\n    }\n    const handlePriorityClick = () => {\n        setPriorityArrow(priorityArrow + 1)\n        if ((priorityArrow + 1) % 3 === 0)\n            setTasks(Tasks.sort((a, b) => a.id - b.id))\n        else if ((priorityArrow + 1) % 3 === 1)\n            setTasks(Tasks.sort((a, b) => priorityToNum(b.TaskPriority) - priorityToNum(a.TaskPriority)))\n        else if ((priorityArrow + 1) % 3 === 2)\n            setTasks(Tasks.sort((a, b) => priorityToNum(a.TaskPriority) - priorityToNum(b.TaskPriority)))\n    }\n    //filter by priority end\n    //filter by status start\n    const [mouseOverStatus, setMouseOverStatus] = useState(false);\n    const handleMouseOverStatus = () => setMouseOverStatus(true)\n    const handleMouseOutStatus = () => setMouseOverStatus(false)\n    const [statusArrow, setStatusArrow] = useState(0)\n    const statusToNum = (stat: string) => {\n        if (stat === \"To do\") return 3;\n        else if (stat === \"Doing\") return 2;\n        else return 1;\n    }\n    const handleStatusClick = () => {\n        setStatusArrow(statusArrow + 1)\n        if ((statusArrow + 1) % 3 === 0)\n            setTasks(Tasks.sort((a, b) => a.id - b.id))\n        else if ((statusArrow + 1) % 3 === 1)\n            setTasks(Tasks.sort((a, b) => statusToNum(b.TaskStatus) - statusToNum(a.TaskStatus)))\n        else if ((statusArrow + 1) % 3 === 2)\n            setTasks(Tasks.sort((a, b) => statusToNum(a.TaskStatus) - statusToNum(b.TaskStatus)))\n    }\n    //filter by status end\n    // filter by deadline start\n    const [mouseOverDeadline, setMouseOverDeadline] = useState(false);\n    const handleMouseOverDeadline = () => setMouseOverDeadline(true)\n    const handleMouseOutDeadline = () => setMouseOverDeadline(false)\n    const [deadlineArrow, setDeadlineArrow] = useState(0)\n    const handleDeadlineClick = () => {\n        setDeadlineArrow(deadlineArrow + 1)\n        if ((deadlineArrow + 1) % 3 === 0)\n            setTasks(Tasks.sort((a, b) => a.id - b.id))\n        else if ((deadlineArrow + 1) % 3 === 1)\n            setTasks(Tasks.sort((a, b) => b.TaskDeadline - a.TaskDeadline))\n        else if ((deadlineArrow + 1) % 3 === 2)\n            setTasks(Tasks.sort((a, b) => a.TaskDeadline - b.TaskDeadline))\n    }\n    // filter by deadline end\n    //edit item start\n    const [editModal, setEditModal] = useState(false);\n    const [itemTobeEdited, setItemTobeEdited] = useState<ITasks>({ id: 0, TaskStatus: \"\", TaskDeadline: \"\", TaskName: \"\", TaskPriority: \"\",TaskDetails:\"\" })\n    const handleEditModalClose = () => setEditModal(false);\n    const handleShowEditModal = (id: number) => {\n        const foundItem = Tasks.find((item) => item.id === id)\n        foundItem && setItemTobeEdited(foundItem)\n        setEditModal(true);\n    }\n    //edit item end\n    return (\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                    <th>Task</th>\n                    <th onMouseEnter={handleMouseOverPriority}\n                        onMouseLeave={handleMouseOutPriority}\n                        onClick={handlePriorityClick}\n                    >Priority {(priorityArrow % 3) === 1 && <FaArrowUp />}\n                        {(priorityArrow % 3) === 2 && <FaArrowDown />}\n                        {mouseOverPriority && (priorityArrow % 3) === 0 && <FaArrowUp />}\n                    </th>\n                    <th onMouseEnter={handleMouseOverStatus}\n                        onMouseLeave={handleMouseOutStatus}\n                        onClick={handleStatusClick}\n                    >Status {(statusArrow % 3) === 1 && <FaArrowUp />}\n                        {(statusArrow % 3) === 2 && <FaArrowDown />}\n                        {mouseOverStatus && (statusArrow % 3) === 0 && <FaArrowUp />}\n                    </th>\n                    <th onMouseEnter={handleMouseOverDeadline}\n                        onMouseLeave={handleMouseOutDeadline}\n                        onClick={handleDeadlineClick}\n                    >Deadline {(deadlineArrow % 3) === 1 && <FaArrowUp />}\n                        {(deadlineArrow % 3) === 2 && <FaArrowDown />}\n                        {mouseOverDeadline && (deadlineArrow % 3) === 0 && <FaArrowUp />}</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody className=\"text-center\">\n                <ShowModal show={show} onHide={handleClose}\n                    itemTobeShowed={itemModal}\n                />\n                <EditModal show={editModal} onHide={handleEditModalClose}\n                    itemTobeEdited={itemTobeEdited}\n                    Tasks={Tasks} setTasks={setTasks} \n                    setCopiedTasks={setCopiedTasks}/>\n                {\n                    Tasks.map((item) => {\n                        const date = item.TaskDeadline as Date\n                        let priorityColor = \"\";\n                        if (item.TaskPriority === \"High\")\n                            priorityColor = \"bg-danger text-white\"\n                        else if (item.TaskPriority === \"Medium\")\n                            priorityColor = \"bg-warning text-white\"\n                        let statusColor = \"\";\n                        if (item.TaskStatus === \"Done\")\n                            statusColor = \"bg-success text-white\"\n                        else if (item.TaskStatus === \"To do\")\n                            statusColor = \"bg-primary text-white\"\n                        else\n                            statusColor = \"bg-warning text-white\"\n                        return (\n                            <tr>\n                                <td>{item.TaskName}</td>\n                                <td><Chip className={priorityColor} label={item.TaskPriority} /></td>\n                                <td><Chip className={statusColor} label={item.TaskStatus} /></td>\n                                <td>{date.toLocaleDateString()}</td>\n                                <td><FaRegEye className=\"mx-2\" onClick={() => handleShowItem(item.id)} /><FaPencilAlt onClick={() => handleShowEditModal(item.id)} className=\"mx-3\" /><FaTrashAlt className=\"mx-2\" onClick={() => handleRemove(item.id)} /></td>\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n    )\n}\nexport default MyTable;","import React from 'react';\nimport './App.css';\nimport MyNavbar from './components/navbar/Navbar';\nimport MyTable from './components/table/Table'\nimport {useState} from 'react'\ninterface ITasks {\n  id:number;\n  TaskName:string;\n  TaskPriority:string;\n  TaskStatus:string;\n  TaskDeadline:any;\n  TaskDetails:string;\n}\nfunction App() {\n  const [Tasks, setTasks] = useState<ITasks[]>([])\n  const [copiedTasks, setCopiedTasks] = useState<ITasks[]>([]);\n  return (\n    <div>\n      <MyNavbar Tasks={Tasks} setTasks={setTasks} \n      copiedTasks={copiedTasks} setCopiedTasks={setCopiedTasks}/>\n      <MyTable Tasks={Tasks} setTasks={setTasks} \n      copiedTasks={copiedTasks} setCopiedTasks={setCopiedTasks}/>\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}